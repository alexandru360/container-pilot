name: Build and Push Docker Updater to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Verify required files
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found in repo root";
            exit 1;
          fi
          if [ ! -f package.json ]; then
            echo "package.json not found in repo root";
            exit 1;
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          # Disable provenance attestation to avoid requiring OIDC id-token in some runner setups.
          attest: false
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/lottery-docker-updater:sha-${{ env.SHORT_SHA }}
            ghcr.io/${{ github.repository_owner }}/lottery-docker-updater:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.title=Lottery Docker Updater
            org.opencontainers.image.description=Next.js application for updating Docker containers with one click
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.licenses=MIT

      - name: Image digest
        run: echo "Image pushed with tags latest and sha-${{ env.SHORT_SHA }}"
